# 工作流名称
name: Docker Build and Save as Artifact

# 触发条件：当 main 分支有代码推送时自动运行
on:
  push:
    branches: [ "main" ]

# 任务
jobs:
  build-and-save:
    # 运行环境：使用最新的 Ubuntu 系统
    runs-on: ubuntu-latest
    
    # 任务步骤
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 QEMU (用于跨平台构建)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4. 【已修改】构建镜像并输出为 .tar 文件
      - name: Build Docker image and save to file
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.alpine
          # 构建 arm64 架构的镜像
          platforms: linux/arm64
          # 【重要】不推送到任何仓库
          push: false
          # 【重要】将构建结果输出为一个 docker 格式的 .tar 文件
          outputs: type=docker,dest=/tmp/docker_image.tar
          # 为镜像打上标签，以便 load 之后能识别
          tags: my-gost-proxy:latest

      # 5. 【新增】上传 .tar 文件作为构建产物 (Artifact)
      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          # 在 GitHub UI 中显示的产物名称
          name: gost-proxy-arm64-image
          # 要上传的文件的路径
          path: /tmp/docker_image.tar
          # 产物保留时间（天）
          retention-days: 30
